{"version":3,"sources":["ImageCard.js","ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","dowloads","likes","map","tag","id","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","error","console","log","length","index","ReactDOM","render","Fragment","document","getElementById"],"mappings":"mLAEe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC5BC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,KAClC,sBAAKH,UAAU,SAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMO,QAElB,+BACE,+BACE,4CACCP,EAAMQ,SAET,+BACE,8CACCR,EAAMS,YAET,+BACE,8CACCT,EAAMU,eAIb,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,GACT,OACE,sBACET,UAAU,qEADZ,SAIGS,GAFIZ,EAAMa,YC9BV,SAASC,EAAT,GAAsC,IAAfC,EAAc,EAAdA,WAAc,EAC1BC,mBAAS,IADiB,mBAC3CC,EAD2C,KACrCC,EADqC,KAOlD,OACE,qBAAKf,UAAU,iDAAf,SACE,sBAAMgB,SANO,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAIiBd,UAAU,kBAApC,SACE,sBAAKA,UAAU,6DAAf,UACE,uBACEmB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAClCrB,UAAU,kHACVsB,KAAK,OACLC,YAAY,yBAEd,wBACEvB,UAAU,sIACVsB,KAAK,SAFP,2BCqBKE,MApCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAgBb,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,qCAD7B,cACwEJ,EADxE,sBAGFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACX,IAEF,sBAAK7B,UAAU,oBAAf,UACE,cAACW,EAAD,CAAaC,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA+B,IAAlBF,EAAOkB,QACpB,oBAAI3C,UAAU,qCAAd,2BAED2B,EACC,qBAAK3B,UAAU,qCAAf,wBAEA,qBAAKA,UAAU,yBAAf,SACGyB,EAAOjB,KAAI,SAACX,EAAO+C,GAClB,OAAO,cAAChD,EAAD,CAAuBC,MAAOA,EAAOiC,QAASA,GAA9Bc,YC7BnCC,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.378bc7ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function ImageCard({ image }) {\r\n  const tags = image.tags.split(',')\r\n\r\n  return (\r\n    <div className='max-w-sm rounded overflow-hidden shadow-lg'>\r\n      <img src={image.webformatURL} alt='' />\r\n      <div className='w-full'>\r\n        <div className='font-bold text-purple-500 text-xl mb-2'>\r\n          photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views:</strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Dowload:</strong>\r\n            {image.dowloads}\r\n          </li>\r\n          <li>\r\n            <strong>Dowload:</strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className='px-6 py-4'>\r\n        {tags.map((tag) => {\r\n          return (\r\n            <span\r\n              className='inline-block bg-gray-200 rounded-full px-5 py-2 mr-4 text-sm mt-6 '\r\n              key={image.id}\r\n            >\r\n              {tag}\r\n            </span>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function ImageSearch({ searchText }) {\r\n  const [text, setText] = useState('')\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    searchText(text)\r\n  }\r\n  return (\r\n    <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\r\n      <form onSubmit={onSubmit} className='w-full max-w-sm'>\r\n        <div className='flex items-center border-b border-b-2 border-teal-500 py-2'>\r\n          <input\r\n            onChange={(e) => setText(e.target.value)}\r\n            className='appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none'\r\n            type='text'\r\n            placeholder='Search Image Term...'\r\n          />\r\n          <button\r\n            className='flex-shrink-0 bg-green-500 hover:bg-green-700 border-green-500 hover:border-green-700 text-sm border-4 text-white py-1 px-2 rounded'\r\n            type='submit'\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './styles/output.css'\r\nimport ImageCard from './ImageCard'\r\nimport ImageSearch from './ImageSearch'\r\nfunction App() {\r\n  const [images, setImages] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [term, setTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_BIXABAY_API_KEY}&q=${term}&image_type=photo`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setImages(data.hits)\r\n        setIsLoading(false)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }, [term])\r\n  return (\r\n    <div className='container mx-auto'>\r\n      <ImageSearch searchText={(text) => setTerm(text)} />\r\n\r\n      {!isLoading && images.length === 0 && (\r\n        <h1 className='text-5xl text-center mx-auto mt-32'>No such Image</h1>\r\n      )}\r\n      {isLoading ? (\r\n        <div className='text-6xl text-center mx-auto mt-32'>Loading...</div>\r\n      ) : (\r\n        <div className='grid grid-cols-3 gap-4'>\r\n          {images.map((image, index) => {\r\n            return <ImageCard key={index} image={image} setTerm={setTerm} />\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}